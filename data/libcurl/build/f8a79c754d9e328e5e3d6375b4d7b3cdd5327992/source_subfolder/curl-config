#! /bin/sh
#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 2001 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at https://curl.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
###########################################################################

prefix=/opt/.conan/data/libcurl/7.83.1/_/_/package/f8a79c754d9e328e5e3d6375b4d7b3cdd5327992
exec_prefix=${prefix}
includedir=${prefix}/include
cppflag_curl_staticlib=

usage()
{
    cat <<EOF
Usage: curl-config [OPTION]

Available values for OPTION include:

  --built-shared says 'yes' if libcurl was built shared
  --ca        ca bundle install path
  --cc        compiler
  --cflags    pre-processor and compiler flags
  --checkfor [version] check for (lib)curl of the specified version
  --configure the arguments given to configure when building curl
  --features  newline separated list of enabled features
  --help      display this help and exit
  --libs      library linking information
  --prefix    curl install prefix
  --protocols newline separated list of enabled protocols
  --ssl-backends output the SSL backends libcurl was built to support
  --static-libs static libcurl library linking information
  --version   output version information
  --vernum    output the version information as a number (hexadecimal)
EOF

    exit $1
}

if test $# -eq 0; then
    usage 1
fi

while test $# -gt 0; do
    case "$1" in
    # this deals with options in the style
    # --option=value and extracts the value part
    # [not currently used]
    -*=*) value=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) value= ;;
    esac

    case "$1" in
    --built-shared)
        echo yes
        ;;

    --ca)
        echo "/etc/ssl/certs/ca-certificates.crt"
        ;;

    --cc)
        echo "gcc"
        ;;

    --prefix)
        echo "$prefix"
        ;;

    --feature|--features)
        for feature in AsynchDNS HSTS HTTPS-proxy IPv6 Largefile NTLM NTLM_WB SSL TLS-SRP UnixSockets alt-svc libz ""; do
            test -n "$feature" && echo "$feature"
        done
        ;;

    --protocols)
        for protocol in DICT FILE FTP FTPS GOPHER GOPHERS HTTP HTTPS IMAP IMAPS MQTT POP3 POP3S RTSP SMB SMBS SMTP SMTPS TELNET TFTP; do
            echo "$protocol"
        done
        ;;

    --version)
        echo libcurl 7.83.1
        exit 0
        ;;

    --checkfor)
        checkfor=$2
        cmajor=`echo $checkfor | cut -d. -f1`
        cminor=`echo $checkfor | cut -d. -f2`
        # when extracting the patch part we strip off everything after a
        # dash as that's used for things like version 1.2.3-CVS
        cpatch=`echo $checkfor | cut -d. -f3 | cut -d- -f1`

        vmajor=`echo 7.83.1 | cut -d. -f1`
        vminor=`echo 7.83.1 | cut -d. -f2`
        # when extracting the patch part we strip off everything after a
        # dash as that's used for things like version 1.2.3-CVS
        vpatch=`echo 7.83.1 | cut -d. -f3 | cut -d- -f1`

        if test "$vmajor" -gt "$cmajor"; then
            exit 0;
        fi
        if test "$vmajor" -eq "$cmajor"; then
            if test "$vminor" -gt "$cminor"; then
                exit 0
            fi
            if test "$vminor" -eq "$cminor"; then
                if test "$cpatch" -le "$vpatch"; then
                    exit 0
                fi
            fi
        fi

        echo "requested version $checkfor is newer than existing 7.83.1"
        exit 1
        ;;

    --vernum)
        echo 075301
        exit 0
        ;;

    --help)
        usage 0
        ;;

    --cflags)
        if test "X$cppflag_curl_staticlib" = "X-DCURL_STATICLIB"; then
          CPPFLAG_CURL_STATICLIB="-DCURL_STATICLIB "
        else
          CPPFLAG_CURL_STATICLIB=""
        fi
        if test "X${prefix}/include" = "X/usr/include"; then
          echo "$CPPFLAG_CURL_STATICLIB"
        else
          echo "${CPPFLAG_CURL_STATICLIB}-I${prefix}/include"
        fi
        ;;

    --libs)
        if test "X${prefix}/lib" != "X/usr/lib" -a "X${prefix}/lib" != "X/usr/lib64"; then
           CURLLIBDIR="-L${prefix}/lib "
        else
           CURLLIBDIR=""
        fi
        if test "Xyes" = "Xno"; then
          echo ${CURLLIBDIR}-lcurl -lssl -lcrypto -lz -lltdl -lssl -lcrypto -lz -ldl -lpthread -lrt -pthread
        else
          echo ${CURLLIBDIR}-lcurl
        fi
        ;;
    --ssl-backends)
        echo "OpenSSL v3+"
        ;;

    --static-libs)
        if test "Xno" != "Xno" ; then
          echo ${prefix}/lib/libcurl.a -m64 -L/opt/.conan/data/libtool/2.4.6/_/_/package/7220a8d356f22477137df1a1547bcd812718c470/lib -L/opt/.conan/data/openssl/3.0.3/_/_/package/5ccd87090512901ae7a8c18837500511698efed7/lib -L/opt/.conan/data/zlib/1.2.12/_/_/package/2af715f34a7c8c2aeae57b25be0a52c4110dc502/lib -L/opt/.conan/data/zlib/1.2.12/_/_/package/2af715f34a7c8c2aeae57b25be0a52c4110dc502/lib -L/opt/.conan/data/openssl/3.0.3/_/_/package/5ccd87090512901ae7a8c18837500511698efed7/lib -lssl -lcrypto -lz -lltdl -lssl -lcrypto -lz -ldl -lpthread -lrt -pthread
        else
          echo "curl was built with static libraries disabled" >&2
          exit 1
        fi
        ;;

    --configure)
        echo " '--with-libidn2=no' '--with-librtmp=no' '--with-libpsl=no' '--with-schannel=no' '--with-secure-transport=no' '--with-brotli=no' '--enable-shared=yes' '--enable-static=no' '--enable-dict=yes' '--enable-file=yes' '--enable-ftp=yes' '--enable-gopher=yes' '--enable-http=yes' '--enable-imap=yes' '--enable-ldap=no' '--enable-mqtt=yes' '--enable-pop3=yes' '--enable-rtsp=yes' '--enable-smb=yes' '--enable-smtp=yes' '--enable-telnet=yes' '--enable-tftp=yes' '--enable-debug=no' '--enable-ares=no' '--enable-threaded-resolver=yes' '--enable-cookies=yes' '--enable-ipv6=yes' '--enable-manual=no' '--enable-verbose=yes' '--enable-symbol-hiding=no' '--enable-unix-sockets=yes' '--with-ssl=/opt/.conan/data/openssl/3.0.3/_/_/package/5ccd87090512901ae7a8c18837500511698efed7' '--without-wolfssl' '--without-libssh2' '--without-nghttp2' '--with-zlib=/opt/.conan/data/zlib/1.2.12/_/_/package/2af715f34a7c8c2aeae57b25be0a52c4110dc502' '--with-zstd=no' '--prefix=/opt/.conan/data/libcurl/7.83.1/_/_/package/f8a79c754d9e328e5e3d6375b4d7b3cdd5327992' '--bindir=${prefix}/bin' '--sbindir=${prefix}/bin' '--libexecdir=${prefix}/bin' '--libdir=${prefix}/lib' '--includedir=${prefix}/include' '--oldincludedir=${prefix}/include' '--datarootdir=${prefix}/share' 'CFLAGS=-m64 -O3 -s -fPIC' 'LDFLAGS=-m64 -L/opt/.conan/data/libtool/2.4.6/_/_/package/7220a8d356f22477137df1a1547bcd812718c470/lib -L/opt/.conan/data/openssl/3.0.3/_/_/package/5ccd87090512901ae7a8c18837500511698efed7/lib -L/opt/.conan/data/zlib/1.2.12/_/_/package/2af715f34a7c8c2aeae57b25be0a52c4110dc502/lib' 'LIBS=-lltdl -lssl -lcrypto -lz -ldl -lpthread -lrt' 'CPPFLAGS=-I/opt/.conan/data/libtool/2.4.6/_/_/package/7220a8d356f22477137df1a1547bcd812718c470/include -I/opt/.conan/data/openssl/3.0.3/_/_/package/5ccd87090512901ae7a8c18837500511698efed7/include -I/opt/.conan/data/zlib/1.2.12/_/_/package/2af715f34a7c8c2aeae57b25be0a52c4110dc502/include -DNDEBUG'"
        ;;

    *)
        echo "unknown option: $1"
        usage 1
        ;;
    esac
    shift
done

exit 0
